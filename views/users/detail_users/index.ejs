<%- include('../../partials/users/_head') %>

<!-- Navigation-->
<%- include('../../partials/users/_navbar') %>

<!-- Masthead-->
<header class="masthead" id="about">
    <div class="container px-4 px-lg-5 d-flex h-100 align-items-center justify-content-center">
        <div class="d-flex justify-content-center">
            <div class="text-center">
                <h1 class="mx-auto my-0">KnowledgeNest</h1>
                <h2 class="text-white-50 mx-auto mt-2 mb-5">
                    We're a dedicated educational platform committed to providing quality education access to everyone. With a curriculum focusing on skill development, interactive learning, and easy accessibility.
                </h2>
                <a class="btn btn-sm btn-outline-black" type="button" href="/">Get Started</a>
            </div>
        </div>
    </div>
</header>

<!-- Include Axios library -->
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<!-- Script to fetch and display videos -->
<script>
  // Function to extract YouTube video ID from URL
  function extractYouTubeId(url) {
    var regExp = /^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#&?]*).*/;
    var match = url.match(regExp);
    return (match && match[7].length == 11) ? match[7] : false;
  }

  // Function to create YouTube embed URL
  function createYouTubeEmbedUrl(youtubeId) {
    return `https://www.youtube.com/embed/${youtubeId}`;
  }

  // Function to fetch and display videos
  async function fetchAndDisplayVideos() {
    try {
      // Fetch data from server
      const response = await axios.get('/video/getall');
      const data = response.data;

      // Loop through video data and display them
      data.forEach(video => {
        // Extract YouTube video ID from the link
        const youtubeId = extractYouTubeId(video.link_video);
        
        // Create HTML elements for each video
        const videoElement = document.createElement('div');
        videoElement.classList.add('col-md-6', 'col-lg-4', 'mb-4');
        videoElement.innerHTML = `
          <div class="card h-100">
            <img src="https://img.youtube.com/vi/${youtubeId}/hqdefault.jpg" class="card-img-top" alt="Thumbnail" data-bs-toggle="modal" data-bs-target="#videoModal${video.id_video}">
            <div class="card-body">
              <h5 class="card-title">${video.judul_video}</h5>
            </div>
          </div>
          
          <!-- Modal -->
          <div class="modal fade" id="videoModal${video.id_video}" tabindex="-1" aria-labelledby="videoModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg modal-dialog-centered">
              <div class="modal-content">
                <div class="modal-header">
                  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                  <div class="ratio ratio-16x9">
                    <iframe src="${createYouTubeEmbedUrl(youtubeId)}" frameborder="0" allowfullscreen></iframe>
                  </div>
                </div>
                <div class="modal-footer">
                  <a href="/video/edit/${video.id_video}" class="btn btn-primary">Edit</a>
                  <a href="/video/delete/${video.id_video}" class="btn btn-danger">Delete</a>
                </div>
              </div>
            </div>
          </div>
        `;
        // Append video elements to the page
        document.getElementById('projects-row').appendChild(videoElement);
      });
    } catch (error) {
      console.error('Error fetching videos:', error);
    }
  }

  // Call the function when the page loads
  window.onload = fetchAndDisplayVideos;

  // Function to delete a video
  async function deleteVideo(videoId) {
    try {
      await axios.delete(`/video/delete/${videoId}`);
      // Refresh the page or remove the video element from the DOM
      location.reload();
    } catch (error) {
      console.error('Error deleting video:', error);
    }
  }

  // Function to edit a video
  function editVideo(videoId) {
    // Redirect to an edit page or open an edit form
    window.location.href = `/video/edit/${videoId}`;
  }
</script>

<!-- Projects-->
<section class="projects-section bg-light" id="projects">
    <div class="container px-4 px-lg-5">
        <!-- Projects Row-->
        <div class="row gx-4 gx-lg-5" id="projects-row">
            <!-- Video cards will be appended here -->
        </div>
    </div>
</section>

<!-- Signup-->
<section class="signup-section" id="signup">
    <div class="container px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5">
            <div class="col-md-10 col-lg-8 mx-auto text-center">
                <i class="far fa-paper-plane fa-2x mb-2 text-white"></i>
                <h2 class="text-white mb-5">Enter a Title for your Material</h2>
                <form class="form-signup" action="/video/store" method="POST">
                    <!-- Title input-->
                    <div class="row input-group-newsletter mb-2">
                        <div class="col">
                            <input class="form-control" id="titleInput" name="judul_video" type="text" placeholder="Enter title..." aria-label="Enter title..." data-sb-validations="required" />
                        </div>
                    </div>
                    <div class="invalid-feedback mt-2" data-sb-feedback="titleInput:required">A title is required.</div>
                    
                    <h2 class="text-white mb-2 mt-5">Link:</h2>
                    <!-- Link input-->
                    <div class="row input-group-newsletter mb-2">
                        <div class="col">
                            <input class="form-control" id="linkInput" name="link_video" type="text" placeholder="Enter link..." aria-label="Enter link..." data-sb-validations="required" />
                        </div>
                    </div>
                    <div class="invalid-feedback mt-2" data-sb-feedback="linkInput:required">A link is required.</div>
                    
                    <input type="hidden" id="userIdInput" name="id_users" value="<%= id_users %>" data-sb-validations="required">

                    <h2 class="text-white mb-2 mt-5">Class:</h2>
                    <!-- Class dropdown-->
                    <div class="row input-group-newsletter mb-2">
                        <div class="col">
                            <div class="dropdown">
                                <button class="btn btn-secondary dropdown-toggle" type="button" id="classDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                    Select Class
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="classDropdown">
                                    <% kelas.forEach(function(kelasItem) { %>
                                        <li>
                                            <a class="dropdown-item d-flex align-items-center" href="#" data-value="<%= kelasItem.id_kelas %>">
                                                <img src="/images/upload/<%= kelasItem.file_kelas %>" alt="<%= kelasItem.file_kelas %>" class="me-2" style="width: 40px; height: 40px;">
                                                <%= kelasItem.judul %>
                                            </a>
                                        </li>
                                    <% }); %>
                                </ul>
                                <input type="hidden" name="id_kelas" id="classInput" data-sb-validations="required">
                            </div>
                        </div>
                        <div class="invalid-feedback mt-2" data-sb-feedback="classInput:required">A class is required.</div>
                    </div>
                    
                    <!-- Submit button-->
                    <div class="row input-group-newsletter">
                        <div class="col-auto">
                            <button class="btn btn-primary" id="submitButton" type="submit">Insert!</button>
                        </div>
                    </div>
                    
                    <!-- Submit success message-->
                    <div class="d-none" id="submitSuccessMessage">
                        <div class="text-center mb-3 mt-2 text-white">
                            <div class="fw-bolder">Form submission successful!</div>
                            If something happens, communicate with
                            <br />
                            <a href="https://startbootstrap.com/solution/contact-forms">https://startbootstrap.com/solution/contact-forms</a>
                        </div>
                    </div>
                    
                    <!-- Submit error message-->
                    <div class="d-none" id="submitErrorMessage">
                        <div class="text-center text-danger mb-3 mt-2">Error sending message!</div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>

<!-- Contact-->
<%- include('../../partials/common/_contact') %>

<!-- Footer-->
<%- include('../../partials/common/_footer') %>

<script>
document.addEventListener("DOMContentLoaded", function() {
  const dropdownItems = document.querySelectorAll(".dropdown-item");
  const classDropdown = document.getElementById("classDropdown");
  const classInput = document.getElementById("classInput");

  dropdownItems.forEach(item => {
    item.addEventListener("click", function(event) {
      event.preventDefault();
      const selectedClass = item.getAttribute("data-value");
      const selectedClassText = item.textContent.trim();

      // Set the dropdown button text to the selected class
      classDropdown.textContent = selectedClassText;
      classDropdown.classList.add("btn-primary");
      classDropdown.classList.remove("btn-secondary");

      // Set the value of the hidden input field
      classInput.value = selectedClass;
    });
  });
});
</script>
